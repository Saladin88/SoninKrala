spring.application.name=business
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${BATABASE_PASSWORD}

#permet d'afficher les requetes sql généré par hibernate en log console
spring.jpa.show-sql=true 
#permet de formater ces requêtes pour retrait ligne
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.flywaydb=DEBUG

#Cors
co.simplon.soninkrala.cors=${CORS_URL}

#Token
co.simplon.soninkrala.cost=${BCRYPT_COST}
co.simplon.soninkrala.secret_jwt=${JWT_SECRET}
co.simplon.soninkrala.expiration_jwt=${JWT_EXPIRATION_MINUTES}
co.simplon.soninkrala.issuer=${JWT_ISSUER}

#Mail Sender
spring.mail.host=${AWS_MAIL_HOST}
spring.mail.port=${AWS_MAIL_PORT}
spring.mail.username=${AWS_MAIL_USERNAME}
spring.mail.password=${AWS_MAIL_PASSWORD}
spring.mail.protocol=smtp
#pour permettre l'authentification aux autres serveurs
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
co.simplon.soninkrala.email.from=${AWS_MAIL_SENDER}
spring.mail.properties.mail.debug=true

#Token UUID for email link validation
co.simplon.soninkrala.token.expiration-minutes=${URL_MAIL_EXPIRATION_MINUTES}
co.simplon.soninkrala.email.verification-url-back=${URL_BACK_VERIFICATION_MAIL}
co.simplon.soninkrala.email.redirection-url-front=${URL_FRONT_REDIRECTION_MAIL}

# Claim custom
spring.security.oauth2.resourceserver.jwt.authority-prefix=${CLAIMS_ROLES_JWT_AUTH_PREFIX}
spring.security.oauth2.resourceserver.jwt.authorities-claim-name=${CLAIMS_ROLES_JWT_AUTH_NAME}

#AWS Credentials bucket S3
co.simplon.soninkrala.aws.access.key=${AWS_ACCESS_KEY_BUCKET_S3}
co.simplon.soninkrala.aws.secret.key=${AWS_SECRET_KEY_BUCKET_S3}

#Flyway

spring.flyway.url=${FLYWAY_URL}
spring.flyway.user=${FLYWAY_USERNAME}
spring.flyway.password=${FLYWAY_PASSWORD}

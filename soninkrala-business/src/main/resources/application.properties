spring.application.name=${SPRING_APP_NAME}
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${BATABASE_PASSWORD}
#Ferme connection apr�s fin transaction
spring.jpa.open-in-view=${IS_JPA_CONNECTION_ACTIVE}

#permet d'afficher les requetes sql g�n�r� par hibernate en log console
spring.jpa.show-sql=${IS_SQL_QUERY_SHOW} 
#permet de formater ces requ�tes pour retrait ligne
spring.jpa.properties.hibernate.format_sql=${IS_SQL_QUERY_FORMATTED}

#Cors
co.simplon.soninkrala.cors=${CORS_URL}
co.simplon.soninkrala.cors.enabled=${IS_CORS_ENABLED}

#Token
co.simplon.soninkrala.cost=${BCRYPT_COST}
co.simplon.soninkrala.secret_jwt=${JWT_SECRET}
co.simplon.soninkrala.expiration_jwt=${JWT_EXPIRATION_MINUTES}
co.simplon.soninkrala.issuer=${JWT_ISSUER}

#Mail Sender
spring.mail.host=${AWS_MAIL_HOST}
spring.mail.port=${AWS_MAIL_PORT}
spring.mail.username=${AWS_MAIL_USERNAME}
spring.mail.password=${AWS_MAIL_PASSWORD}
spring.mail.protocol=${AWS_MAIL_PROTOCOLE}
#pour permettre l'authentification aux autres serveurs
spring.mail.properties.mail.smtp.auth=${IS_AWS_SERVORS_AUTHENTIFICATION}
spring.mail.properties.mail.smtp.starttls.enable=${IS_AWS_ENABLE_STARTTLS}
co.simplon.soninkrala.email.from=${AWS_MAIL_SENDER}
spring.mail.properties.mail.debug=${IS_SPRING_MAIL_DEBUG}

#Token UUID for email link validation
co.simplon.soninkrala.token.expiration-minutes=${URL_MAIL_EXPIRATION_MINUTES}
co.simplon.soninkrala.email.verification-url-back=${URL_BACK_VERIFICATION_MAIL}
co.simplon.soninkrala.email.redirection-url-front=${URL_FRONT_REDIRECTION_MAIL}

# Claim custom
spring.security.oauth2.resourceserver.jwt.authority-prefix=${CLAIMS_ROLES_JWT_AUTH_PREFIX}
spring.security.oauth2.resourceserver.jwt.authorities-claim-name=${CLAIMS_ROLES_JWT_AUTH_NAME}

#AWS Credentials bucket S3
co.simplon.soninkrala.aws.access.key=${AWS_ACCESS_KEY_BUCKET_S3}
co.simplon.soninkrala.aws.secret.key=${AWS_SECRET_KEY_BUCKET_S3}


#Python
co.simplon.soninkrala.uri.python-api.pronunciation=${PYTHON_API_PRONUNCIATION_URI}


spring.datasource.hikari.maximum-pool-size=3
spring.datasource.hikari.schema=${SPRING_DATA_SCHEMA}

#logging properties:
logs.filename=${LOGS_FILE_NAME_DIRECTORY}

logging.file.name=${logs.filename}${LOG_FILE_NAME}
logging.logback.rollingpolicy.file-name-pattern=${logs.filename}${LOG_FILE_NAME_PATTERN}
logging.logback.rollingpolicy.max-file-size=${LOG_FILE_NAME_MAX_SIZE}
logging.logback.rollingpolicy.total-size-cap=${LOG_FILE_NAME_SIZE_CAP}

